# Vercel Deployment Checklist

## Pre-Deployment Setup

### [Done] Environment Variables Required

Set these in your Vercel project dashboard (Settings ‚Üí Environment Variables):

1. **ADMIN_USERNAME** - Your admin login email
   - Example: `admin@yourcompany.com`

2. **ADMIN_PASSWORD** - Secure admin password
   - Use a strong password (16+ characters)
   - Example: `SecureP@ssw0rd2024!`

3. Credential recovery via backup email has been removed in this build. The ADMIN_BACKUP_EMAIL environment variable is no longer required.
   - Example: `backup@yourcompany.com`

4. **CREDENTIALS_UPDATED_AT** - ISO timestamp
   - Example: `2024-01-15T10:30:00.000Z`

5. **NEXTAUTH_SECRET** - Secure random string
   - Generate with: `openssl rand -base64 32`
   - Must be at least 32 characters

6. **NEXTAUTH_URL** - Your production URL
   - Example: `https://your-app-name.vercel.app`

### [Done] Set Environment Variables for All Environments

 - [Done] Production
 - [Done] Preview
 - [Done] Development (if needed)

## Deployment Steps

1. **Set Environment Variables**
   ```bash
   # Using Vercel CLI (recommended)
   vercel env add ADMIN_USERNAME production
   vercel env add ADMIN_PASSWORD production
   # Admin backup email has been removed - no Vercel env needed for this feature
   vercel env add CREDENTIALS_UPDATED_AT production
   vercel env add NEXTAUTH_SECRET production
   vercel env add NEXTAUTH_URL production
   ```

2. **Deploy the Application**
   ```bash
   vercel --prod
   ```

3. **Test Authentication**
   - Visit your deployed app
   - Try logging in with your set credentials
   - Check Vercel function logs for any errors

## Post-Deployment Verification

### ‚úÖ Check Function Logs

1. Go to Vercel Dashboard ‚Üí Your Project ‚Üí Functions
2. Look for authentication-related logs
3. Should see: "üåê Running in serverless environment - using environment variables"
4. Should see: "üåê Loading credentials from environment variables"

### ‚úÖ Test Authentication Flow

1. **Login Test**
   - Navigate to `/login`
   - Use your ADMIN_USERNAME and ADMIN_PASSWORD
   - Should succeed without file system errors

2. **Credential Recovery Test** (if backup email is set)
   - Test the password recovery flow
   - Should not show file system errors

### ‚úÖ Expected Log Messages

‚úÖ **Success Messages:**
```
üåê Running in serverless environment - using environment variables
üåê Loading credentials from environment variables  
üîç Credential validation: { environment: 'serverless', providedUsername: 'admin@...', isValid: true }
‚úÖ Authentication successful
```

‚ùå **Error Messages to Watch For:**
```
‚ùå Failed to create credentials file: Error: EROFS: read-only file system
‚ùå Error reading credentials: Error: ENOENT: no such file or directory
```

## Troubleshooting

### Environment Variables Not Loading
1. Verify all required variables are set in Vercel Dashboard
2. Redeploy the application after setting variables
3. Check variable names for typos

### Authentication Still Failing
1. Check Vercel function logs for detailed error messages
2. Verify ADMIN_USERNAME and ADMIN_PASSWORD values
3. Ensure NEXTAUTH_SECRET is set and sufficiently long

### Credential Recovery Issues
1. Credential recovery via backup email has been removed. No verification of ADMIN_BACKUP_EMAIL is necessary.
2. Check email service configuration
3. Review recovery endpoint logs

## Quick Fix Commands

```bash
# Check current environment variables
vercel env ls

# Update a variable
vercel env rm ADMIN_PASSWORD production
vercel env add ADMIN_PASSWORD production

# Redeploy with fresh environment
vercel --prod --force
```

## Security Reminders

- ‚úÖ Use strong, unique passwords
- ‚úÖ Keep NEXTAUTH_SECRET secure and unique
- ‚úÖ Regularly rotate credentials
- ‚úÖ Monitor authentication logs for suspicious activity
- ‚úÖ Never commit actual credentials to your repository

---

**Status:** Ready for deployment once environment variables are configured!