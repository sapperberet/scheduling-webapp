name: Build and Deploy Lambda

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build and push image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_REPO_NAME: scheduling-solver-worker
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --no-cache -f Dockerfile.worker -t $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG -t $ECR_REGISTRY/$IMAGE_REPO_NAME:latest .
          docker push $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG
          docker push $ECR_REGISTRY/$IMAGE_REPO_NAME:latest
      
      - name: Update Lambda
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_REPO_NAME: scheduling-solver-worker
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws lambda update-function-code --function-name scheduling-solver-worker --image-uri $ECR_REGISTRY/$IMAGE_REPO_NAME:$IMAGE_TAG
          aws lambda wait function-updated --function-name scheduling-solver-worker
          aws lambda get-function --function-name scheduling-solver-worker --query 'Configuration.[FunctionName,State,CodeSha256]' --output table
